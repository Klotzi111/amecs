plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "$mod_version+mc$minecraft_version".toString()
group = project.maven_group

loom {
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

repositories {
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}
	maven {
		url "https://jitpack.io"
	}
	mavenLocal()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// we need those old api versions because newer versions require java 16 and that is not available on older minecraft versions
	// these old fabric apis are required because we want to support down to minecraft 1.14
	def fabric_deps = [
			"fabric-api-base"		   : "0.1.2+de26dc4942",
			"fabric-key-binding-api-v1": "1.0.2+4ea4772942",
			"fabric-resource-loader-v0": "0.1.5+4ea4772942"
	]
	for (dep in fabric_deps.entrySet()) {
		include(modApi("net.fabricmc.fabric-api:" + dep.getKey() + ":" + dep.getValue()))
	}

	def amecs_api = modApi("de.siphalor:amecsapi-${project.target_minecraft_major_version}:1.3.5+mc1.18.1") {
		exclude group: "net.fabricmc.fabric-api"
		exclude module: "nmuk-${project.target_minecraft_major_version}"
	}
	include(amecs_api)

	modApi("de.siphalor:nmuk-${project.target_minecraft_major_version}:1.1+") {
		exclude group: "net.fabricmc.fabric-api"
		exclude module: "amecsapi-${project.target_minecraft_major_version}"
	}

	modRuntimeOnly("com.github.astei:lazydfu:master-SNAPSHOT")

	testmodImplementation sourceSets.main.output
}

processResources {
	inputs.property "version", version

	afterEvaluate {
		from(sourceSets.main.resources.srcDirs) {
			include "fabric.mod.json"
			expand "version": version
			duplicatesStrategy DuplicatesStrategy.INCLUDE
		}
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = "${project.archives_base_name}-${project.target_minecraft_major_version}".toString()

			from components.java
		}
	}
	
	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
